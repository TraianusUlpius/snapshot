{"version":3,"sources":["components/Form.js","components/Navigation.js","components/Header.js","components/MapItem.js","components/NoImages.js","components/Gallery.js","utils/viewport.js","components/Map.js","components/Loader.js","components/Container.js","api/config.js","components/Item.js","components/Search.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Form","handleSubmit","history","useState","searchEntry","setSearchEntry","useEffect","location","pathname","className","onSubmit","e","type","name","placeholder","onChange","target","value","trim","disabled","height","width","d","fill","fillRule","Navigation","to","Header","MapItem","data","object","farm","server","id","secret","title","url","key","src","alt","NoImages","Gallery","images","active","onClick","elements","useRef","element","current","el","rect","getBoundingClientRect","top","left","bottom","window","innerHeight","document","documentElement","clientHeight","right","innerWidth","clientWidth","isInViewport","scrollIntoView","behavior","block","inline","length","map","image","latitude","longitude","ref","mapboxgl","workerClass","require","default","Map","hoverInfo","setHoverInfo","info","pitch","bearing","zoom","transitionDuration","transitionInterpolator","FlyToInterpolator","viewState","setViewState","onHover","useCallback","onGalleryItemClick","parseFloat","initialViewState","controller","layers","IconLayer","pickable","getPosition","sizeScale","getSize","getIcon","process","anchorY","anchorX","updateTriggers","mapStyle","mapboxApiAccessToken","style","x","y","Loader","Container","searchTerm","useQuery","fetch","then","res","json","isLoading","photos","photo","Item","Search","NotFound","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","staleTime","App","searchInput","preventDefault","currentTarget","reset","push","client","basename","render","props","exact","path","match","params","component","Component","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0709c45.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst Form = ({ handleSubmit, history }) => {\n  const [searchEntry, setSearchEntry] = useState(\"\");\n\n  // update search text state\n  const updateSearchInput = (e) => {\n    setSearchEntry(e.target.value);\n  };\n\n  useEffect(() => {\n    setSearchEntry(\"\");\n  }, [history.location.pathname]);\n\n  return (\n    <form\n      className=\"search-form\"\n      onSubmit={(e) => handleSubmit(e, history, searchEntry)}\n    >\n      <input\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Search...\"\n        onChange={updateSearchInput}\n        value={searchEntry}\n      />\n      <button\n        type=\"submit\"\n        className={`search-button ${searchEntry.trim() ? \"active\" : null}`}\n        disabled={!searchEntry.trim()}\n      >\n        <svg height=\"32\" width=\"32\">\n          <path\n            d=\"M19.427 21.427a8.5 8.5 0 1 1 2-2l5.585 5.585c.55.55.546 1.43 0 1.976l-.024.024a1.399 1.399 0 0 1-1.976 0l-5.585-5.585zM14.5 21a6.5 6.5 0 1 0 0-13 6.5 6.5 0 0 0 0 13z\"\n            fill=\"#ffffff\"\n            fillRule=\"evenodd\"\n          />\n        </svg>\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Navigation = () => {\n  return (\n    <nav className=\"main-nav\">\n      <ul>\n        <li><NavLink to=\"/mountain\">Mountain</NavLink></li>\n        <li><NavLink to=\"/beach\">Beaches</NavLink></li>\n        <li><NavLink to=\"/bird\">Birds</NavLink></li>\n        <li><NavLink to=\"/food\">Food</NavLink></li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport Form from \"./Form\";\nimport Navigation from \"./Navigation\";\n\nconst Header = ({ history, handleSubmit }) => {\n  return (\n    <div className=\"header\">\n      <h1>SnapShot</h1>\n      <Form history={history} handleSubmit={handleSubmit} />\n      <Navigation />\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst MapItem = ({ data }) => {\n  const { farm, server, id, secret, title } = data.object;\n\n  const url = `https://farm${farm}.staticflickr.com/${server}/${id}_${secret}_m.jpg`;\n\n  return (\n    <div className=\"map-item\">\n      <span>{title}</span>\n      <img key={id} src={url} alt={title} />\n    </div>\n  );\n};\n\nexport default MapItem;\n","import React from \"react\";\n\nconst NoImages = () => (\n  <div>\n    <h2>No Images Found</h2>\n    <p>Please try a different search term</p>\n  </div>\n);\n\nexport default NoImages;\n","import React, { useEffect, useRef } from \"react\";\nimport NoImages from \"./NoImages\";\nimport isInViewport from \"../utils/viewport\";\n\nconst Gallery = ({ images, active, onClick }) => {\n  const elements = useRef([]);\n\n  useEffect(() => {\n    if (active) {\n      const element = elements.current[active];\n\n      if (isInViewport(element)) {\n        return;\n      }\n\n      element.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"end\",\n        inline: \"start\",\n      });\n    }\n  }, [active]);\n\n  return (\n    <div className=\"scroller\">\n      <div className=\"gallery\">\n        {images.length > 0 ? (\n          images.map((image) => {\n            const { farm, server, id, secret, title, latitude, longitude } =\n              image;\n            const url = `https://farm${farm}.staticflickr.com/${server}/${id}_${secret}_m.jpg`;\n\n            return (\n              <img\n                ref={(el) =>\n                  (elements.current = { ...elements.current, [id]: el })\n                }\n                onClick={() => onClick({ id, latitude, longitude })}\n                key={id}\n                src={url}\n                alt={title}\n                className={active === id ? \"active\" : active ? \"inactive\" : \"\"}\n              />\n            );\n          })\n        ) : (\n          <NoImages />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Gallery;\n","export default (el) => {\n  const rect = el.getBoundingClientRect();\n\n  return (\n    rect.top >= 0 &&\n    rect.left >= 0 &&\n    rect.bottom <=\n      (window.innerHeight || document.documentElement.clientHeight) &&\n    rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n  );\n};\n","import React, { useCallback, useState, Fragment } from \"react\";\nimport DeckGL from \"@deck.gl/react\";\nimport { IconLayer } from \"@deck.gl/layers\";\nimport { FlyToInterpolator } from \"@deck.gl/core\";\nimport mapboxgl from \"mapbox-gl\";\nimport { StaticMap } from \"react-map-gl\";\nimport MapItem from \"./MapItem\";\nimport Gallery from \"./Gallery\";\n\nmapboxgl.workerClass =\n  // eslint-disable-next-line import/no-webpack-loader-syntax, import/no-unresolved\n  require(\"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\").default;\n\nconst Map = ({ images }) => {\n  const [hoverInfo, setHoverInfo] = useState(null);\n  const [viewState, setViewState] = useState({\n    active: null,\n    info: {\n      pitch: 0,\n      bearing: 0,\n      longitude: 48.524449,\n      latitude: -2.652339,\n      zoom: 1,\n      transitionDuration: 300,\n      transitionInterpolator: new FlyToInterpolator(),\n    },\n  });\n\n  const onHover = useCallback((d) => {\n    setHoverInfo(d.object ? d : null);\n  }, []);\n\n  const onGalleryItemClick = ({ id, latitude, longitude }) => {\n    setViewState({\n      active: id,\n      info: {\n        ...viewState.info,\n        zoom: 10,\n        latitude: parseFloat(latitude),\n        longitude: parseFloat(longitude),\n      },\n    });\n  };\n\n  return (\n    <Fragment>\n      <Gallery\n        images={images}\n        active={hoverInfo?.object?.id}\n        onClick={onGalleryItemClick}\n      />\n      <div className=\"map\">\n        <DeckGL\n          initialViewState={viewState.info}\n          controller={true}\n          layers={[\n            new IconLayer({\n              id: \"bart-stations\",\n              data: images,\n              pickable: true,\n              getPosition: (d) => [\n                parseFloat(d.longitude),\n                parseFloat(d.latitude),\n              ],\n              sizeScale: 15,\n              onHover: onHover,\n              onClick: (d) => {\n                const { id, latitude, longitude } = d.object;\n\n                onGalleryItemClick({ id, latitude, longitude });\n              },\n              getSize: (d) => 5,\n              getIcon: (d) => {\n                return {\n                  url: `${process.env.PUBLIC_URL}/${\n                    viewState.active === d.id\n                      ? \"marker-active.png\"\n                      : \"marker.png\"\n                  }`,\n                  width: 96,\n                  height: 96,\n                  anchorY: 96,\n                  anchorX: 48,\n                };\n              },\n              updateTriggers: {\n                getIcon: viewState,\n              },\n            }),\n          ]}\n        >\n          <StaticMap\n            mapStyle=\"mapbox://styles/mapbox/light-v9\"\n            mapboxApiAccessToken=\"pk.eyJ1IjoibW91YXQiLCJhIjoiY2tsYzFjOTVjMTBxbDJ2czhnN3UxeHBrbiJ9.UMBY9tjvmtcU6bUNANQ68g\"\n          />\n        </DeckGL>\n        {hoverInfo && (\n          <div\n            className=\"tooltip\"\n            style={{\n              left: hoverInfo.x + 20,\n              top: hoverInfo.y - 10,\n            }}\n          >\n            <MapItem data={hoverInfo} />\n          </div>\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Map;\n","import React from 'react';\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n    </div>\n  );\n}\n\nexport default Loader;\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { apiKey } from \"../api/config\";\nimport Map from \"./Map\";\nimport Loader from \"./Loader\";\n\nconst Container = ({ searchTerm }) => {\n  const { isLoading, data } = useQuery([\"images\", searchTerm], () =>\n    fetch(\n      `https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${searchTerm}&has_geo=1&per_page=24&extras=geo&format=json&nojsoncallback=1`\n    ).then((res) => res.json())\n  );\n\n  return (\n    <div className=\"photo-container\">\n      {isLoading ? <Loader /> : <Map images={data.photos.photo} />}\n    </div>\n  );\n};\n\nexport default Container;\n","export const apiKey = \"ab878c6b2de41e56d24033d0ef8b7dfa\";\n","import React from \"react\";\nimport Container from \"./Container\";\n\nconst Item = ({ searchTerm }) => {\n  return (\n    <div className=\"fluid\">\n      <h2>{searchTerm} Pictures</h2>\n      <Container searchTerm={searchTerm} />\n    </div>\n  );\n};\n\nexport default Item;\n","import React from \"react\";\nimport Container from \"./Container\";\n\nconst Search = ({ searchTerm }) => {\n  return (\n    <div className=\"fluid\">\n      <h2>{searchTerm} Images</h2>\n      <Container searchTerm={searchTerm} />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div className=\"not-found\">\n    <h2>Page Not Found</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { Route, Switch, Redirect, BrowserRouter } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Item from \"./components/Item\";\nimport Search from \"./components/Search\";\nimport NotFound from \"./components/NotFound\";\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      staleTime: 50000,\n    },\n  },\n});\nclass App extends Component {\n  // Prevent page reload, clear input, set URL and push history on submit\n  handleSubmit = (e, history, searchInput) => {\n    e.preventDefault();\n    e.currentTarget.reset();\n    let url = `/search/${searchInput}`;\n    history.push(url);\n  };\n\n  render() {\n    return (\n      <QueryClientProvider client={queryClient}>\n        <BrowserRouter basename=\"/snapshot\">\n          <div className=\"container\">\n            <Route\n              render={(props) => (\n                <Header\n                  handleSubmit={this.handleSubmit}\n                  history={props.history}\n                />\n              )}\n            />\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={() => <Redirect to=\"/mountain\" />}\n              />\n\n              <Route\n                path=\"/mountain\"\n                render={() => <Item searchTerm=\"mountain\" />}\n              />\n              <Route path=\"/beach\" render={() => <Item searchTerm=\"beach\" />} />\n              <Route path=\"/bird\" render={() => <Item searchTerm=\"bird\" />} />\n              <Route path=\"/food\" render={() => <Item searchTerm=\"food\" />} />\n              <Route\n                path=\"/search/:searchInput\"\n                render={(props) => (\n                  <Search searchTerm={props.match.params.searchInput} />\n                )}\n              />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </QueryClientProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}